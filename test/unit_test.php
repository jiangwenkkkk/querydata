<?php
/**
 * Created by PhpStorm.
 * User: james
 * Date: 2018/12/2
 * Time: 11:16 PM
 */

require_once("../autoload.php");


class test_query extends \data\own_wrong_bill
{

    public function file_name()
    {
//        \data\query_mode::begin_end();
        return parent::file_name(); // TODO: Change the autogenerated stub
    }
}

class test_mode extends \data\query_mode
{
    public function set_data()
    {
        parent::set_data(); // TODO: Change the autogenerated stub
    }
    public function set_sql($index)
    {
        // TODO: Implement set_sql() method.
    }
    public function to_array($row)
    {
        // TODO: Implement to_array() method.
    }
}

class testClassclose
{
    private $_file;
    public function __construct()
    {
//        $this->_file = fopen("hello.txt", "w");
    }

    public function __destruct()
    {
        // TODO: Implement __destruct() method.
        if ($this->_file != null) {
            fclose($this->_file);
        }
    }
}
class testTest extends PHPUnit_Framework_TestCase
{
    public function testAdd()
    {
        echo "a";
    }

    public function testGetfilename()
    {
        $mode = new test_query();
        $a = $mode->file_name();
    }

    public function testClose()
    {
        $te = new testClassclose();
    }

    public function testArray()
    {
        $arr = ['a'=>['a'=>'c', 'b'=>'d'], 'b'=>['a'=>'e', 'b'=>'f'], 'c' => ['a'=>'g', 'b'=>'h']];
        $tm = [];
        foreach ($arr as $item) {
            $tm[] = $item;
        }
        var_dump($tm);
    }

    public function testTop3()
    {
        $a = new \data\top_3_wrong_bill();
        $arr = [['a'=>'b'], ['d' => 'c']];
        $result = $a->get_top_3($arr);
    }

    public function testArrayslice()
    {
        $arr = [['a'=>'b'], ['d' => 'c']];
        $re = array_slice($arr, 0, 3);

    }

    public function testTime()
    {
        $msc = microtime(true);
        for ($i = 0; i < 1000; $i++){
            echo $i;
        }
        $msc = microtime(true) - $msc;
        echo $msc;
    }

    public function testGet_month()
    {
        $mode = new test_mode();
        $re = $mode->get_table_no();
    }

    public function testLog()
    {
        $test=2;

        if ($test>1)
        {
            error_log("A custom error has been triggered",
                1,"someone@example.com","From: webmaster@example.com");
        }
    }

    public function testDate()
    {
        $a = date("H:i:s");
        echo $a < "20:00:00";

    }

    public function testDays()
    {
        $date=date_create("2016-09-25");
        echo date_format($date,"m");
        $d=mktime(9, 12, 31, 6, 10, 2015);
        echo "创建日期是 " . date("Y-m-d h:i:sa", $d);
        echo "创建日期是 " . date("d", $d);
        $days = date("Ymd","20190618");
        echo "time is".$days;
    }

    public function testDateFormat()
    {
        $date = date_create("2020-03-22 00:00:00");
//        $date_end = date_create('2020-03-22 01:00:00');
//
//
//        echo $date->getTimestamp()."dd";
//
//        echo $date->getTimestamp()."dd";
//        echo $date_end->getTimestamp().'dd';
//        echo $date->getTimestamp() - $date_end->getTimestamp();

//        echo date_format($date,'YmdH');
//      echo date('Ymdh', $date);

//        $time = strtotime("2018-01-18 08:08:08");  // 将指定日期转成时间戳

        echo date("YmdH", $date->getTimestamp())  . PHP_EOL;
    }

    public function testDateFormat_add()
    {
        $date = date_create("2020-03-22 00:00:00");
//        $date_end = date_create('2020-03-22 01:00:00');
//
//
//        echo $date->getTimestamp()."dd";
//
//        echo $date->getTimestamp()."dd";
//        echo $date_end->getTimestamp().'dd';
//        echo $date->getTimestamp() - $date_end->getTimestamp();

//        echo date_format($date,'YmdH');
//      echo date('Ymdh', $date);

//        $time = strtotime("2018-01-18 08:08:08");  // 将指定日期转成时间戳

        echo date("YmdH", $date->getTimestamp())  . PHP_EOL;
    }
}
